# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Default path will just redirect to the issue list
GET         /                           controllers.HomeController.index()

# REST API
## Users
-> /api/users/                           users.Routes

## Issues
-> /api/issues/                           issues.Routes

## Comments
-> /api/comments/                           comments.Routes

# Auth

## login
GET         /auth                       controllers.LoginController.auth(request: Request)
POST        /auth                       controllers.LoginController.login(request: Request)

# Issues

## Issues list (look at the default values for pagination parameters)
GET         /issues                     controllers.IssueController.list(request: Request, p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")

## Add issue
GET         /issues/new                 controllers.IssueController.create(request: Request)
POST        /issues                     controllers.IssueController.save(request: Request)

GET         /issuedetails/:id           controllers.IssueController.details(request: Request, id:Long)

## Edit existing issue
GET         /issues/:id                 controllers.IssueController.edit(request: Request, id:Long)
POST        /issues/:id                 controllers.IssueController.update(request: Request, id:Long)

## Delete a issue
POST        /issues/:id/delete          controllers.IssueController.delete(id:Long)

# Users
## list users
GET         /users                      controllers.UserController.listUsers(request: Request, p:Int ?= 0, s ?= "name", o ?= "desc", f ?= "")

## Add main
GET         /users/new                  controllers.UserController.userSignup(request: Request)
POST        /users                      controllers.UserController.saveUser(request: Request)

## Edit existing user
GET         /users/:id                  controllers.UserController.editUser(request: Request, id:Long)
POST        /users/:id                  controllers.UserController.updateUser(request: Request, id:Long)

## Delete a user
POST        /users/:id/delete           controllers.UserController.deleteUser(id:Long)

# Comments
## Add comments
GET         /comments/new               controllers.CommentController.create(request: Request, id:Long)
POST        /comments                   controllers.CommentController.save(request: Request, id:Long)

## lists all Comments
GET         /comments/list/:id        controllers.CommentController.list(request: Request, id:Long, p:Int ?= 0, s ?= "introduced", o ?= "asc", f ?= "")

# Edit existing commnet
GET         /comments/:id               controllers.CommentController.edit(request: Request, id:Long)
POST        /comments/:id               controllers.CommentController.update(request: Request, id:Long)

# Delete a comment
POST        /comments/:id/delete        controllers.CommentController.delete(id:Long)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file               controllers.Assets.at(path="/public", file)

